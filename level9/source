class N //108 octets
{
	private:
		void *ptr; 0x0
		char str[100]; 0x4
		int nb; 0x68

	public:
		N(int); //constructeur
		setAnnotation(char*);
		operator-(N&); //surcharge-
		operator+(N&); //surcharge+
}

N::setAnnotation(char *ptr)
{
	memcpy(this.str, ptr, strlen(ptr));
}

N::void N(int i) //constructeur
{
	this.ptr = 0x8048848; //vtable
	this.nb = i;
}

N::operator-(N& a, N& b)
{
	return (a.nb - b.nb);
}

N::operator+(N& a, N& b)
{
	return (a.nb + b.nb);
}

int main(int argc, char **argv)
{
	if (argc <= 1)
		exit(1);
	a = new(Obj(5));
	b = new(Obj(6));
	a.setAnnotation(argv[1]);
	a = b + a;	//b.ptr.surchage+(b, a);
}
